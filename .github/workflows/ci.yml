name: NanoFed CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    container:
      image: pytorch/pytorch:2.2.1-cuda12.1-cudnn8-runtime
    steps:
      - uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          apt-get update
          apt-get install -y curl python3-dev build-essential

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          # Add poetry to PATH
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Configure Poetry
        run: |
          $HOME/.local/bin/poetry config virtualenvs.create false
          $HOME/.local/bin/poetry config installer.max-workers 10

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install numpy
          $HOME/.local/bin/poetry install --no-interaction --with ml --no-root

      - name: Install package
        run: $HOME/.local/bin/poetry install --no-interaction --only-root

      - name: Run linters
        run: make lint

      - name: Run tests
        run: make test

  distribution:
    needs: build_and_test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: poetry install --no-interaction --without dev,ml

      - name: Build package
        run: poetry build

      - name: Check distribution
        run: |
          poetry run pip install twine
          poetry run twine check dist/*
